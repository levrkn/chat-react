{"version":3,"sources":["utils/functions.ts","store/auth.ts","store/chat.ts","routes/endpoints.ts","components/atoms/Loader/Loader.tsx","components/atoms/Typography/Typography.tsx","components/atoms/Avatar/Avatar.tsx","assets/images/arrow.svg","components/atoms/ArrowButton/ArrowButton.tsx","assets/images/maleIcon.svg","assets/images/femaleIcon.svg","components/molecules/Activity/Activity.tsx","components/molecules/NoCardSelected/NoCardSelected.tsx","components/molecules/Card/Card.tsx","assets/images/lackCardsIcon.svg","components/atoms/LackCardsIcon/LackCardsIcon.tsx","components/molecules/LackCards/LackCards.tsx","components/organisms/CardList/CardList.tsx","assets/images/logo.svg","components/atoms/Logo/Logo.tsx","assets/images/profileIcon.svg","components/atoms/ProfileIcon/ProfileIcon.tsx","components/organisms/Header/Header.tsx","assets/images/fileIcon.svg","components/molecules/Message/Message.tsx","components/organisms/MessageList/MessageList.tsx","assets/images/sendIcon.svg","components/atoms/SendButton/SendButton.tsx","components/atoms/SendFile/SendFile.tsx","components/atoms/SendInput/SendInput.tsx","components/organisms/SendForm/SendForm.tsx","components/templates/Chat/ChatTemplate.tsx","components/pages/Chat.tsx","components/atoms/AuthButton/AuthButton.tsx","components/atoms/Label/Label.tsx","components/atoms/AuthInput/AuthInput.tsx","components/molecules/Field/Field.tsx","components/molecules/AuthCaptcha/AuthCaptcha.tsx","components/organisms/LoginForm/LoginForm.tsx","components/templates/Login/LoginTemplate.tsx","components/pages/Login.tsx","components/atoms/Select/Select.tsx","components/molecules/AuthSelect/AuthSelect.tsx","components/organisms/RegistrationForm/RegistrationForm.tsx","components/templates/Registration/RegistrationTemplate.tsx","components/pages/Registration.tsx","routes/index.tsx","App.tsx","index.tsx"],"names":["errorAlert","text","toast","error","position","draggable","successAlert","success","autoClose","hideProgressBar","fetchGendersFx","createEffect","a","fetch","res","json","$genders","createStore","genders","on","done","state","payload","result","loginFx","data","formdata","FormData","append","login","password","captcha","method","body","ok","then","Error","watch","localStorage","setItem","replace","updateSocket","fail","message","registrationFx","passwordConfirm","name","genderId","$isAuth","getItem","$messages","JSON","parse","addMessage","createEvent","push","id","Date","now","stringify","refreshUsersList","$users","length","you","$usersIsLoading","sendFileFx","params","file","func","SCREENS","$socket","WebSocket","Loader","className","classNameProps","classNames","Typography","children","variant","Avatar","rest","classProps","alt","ArrowButton","to","src","arrow","Activity","title","subtitle","gender","maleAvatar","femaleAvatar","NoCardSelected","Card","user","useParams","active","Number","LackCardsIcon","icon","LackCards","CardList","users","messages","isLoading","content","filter","map","m","from","u","currentMessage","Fragment","Logo","logo","ProfileIcon","image","Header","Message","useStore","message__right","href","fileIcon","size","MessageList","useEffect","messagess","document","getElementById","scrollTop","scrollHeight","el","SendButton","type","sendIcon","SendFile","onChange","htmlFor","currentFile","target","files","ext","SendInput","value","placeholder","autoComplete","e","SendForm","currentUser","pending","socket","useState","values","setvalues","onSubmit","preventDefault","send","f","v","t","ChatTemplate","mobileClass","show","Chat","onopen","onmessage","event","console","log","str","isJson","index","usersIsLoading","AuthButton","white","disabled","Label","AuthInput","isDirty","Field","label","AuthCaptcha","captchaSrc","setCaptchaSrc","aria-label","onClick","headers","url","schema","yup","shape","min","max","required","LoginForm","useForm","resolver","yupResolver","defaultValues","handleSubmit","errors","formState","control","history","useHistory","render","field","onBlur","fieldState","LoginTemplate","Login","Select","options","inputRef","useRef","isOpen","setIsOpen","setValue","buttonClass","open","selected","selectClass","handleButtonClick","current","dispatchEvent","Event","bubbles","onInput","ref","AuthSelect","oneOf","RegistrationForm","RegistrationTemplate","Registration","Routes","path","SCREEN_CHAT","component","exact","SCREEN_LOGIN","SCREEN_REGISTER","App","basename","process","ReactDOM"],"mappings":"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","file":"static/js/main.4db2eb6d.chunk.js","sourcesContent":["import { toast } from 'react-toastify';\r\n\r\nexport const isJson: (str: string) => boolean = (str) => {\r\n  try {\r\n    JSON.parse(str);\r\n  } catch (e) {\r\n    return false;\r\n  }\r\n  return true;\r\n};\r\n\r\nexport const errorAlert: (text: string) => void = (text) =>\r\n  toast.error(text, {\r\n    position: 'top-center',\r\n    draggable: false,\r\n  });\r\n\r\nexport const successAlert: (text: string) => void = (text) => {\r\n  toast.success(text, {\r\n    position: 'top-center',\r\n    autoClose: 2000,\r\n    hideProgressBar: true,\r\n    draggable: false,\r\n  });\r\n};\r\n","import { createEffect, createStore } from 'effector';\r\nimport { errorAlert, successAlert } from '../utils/functions';\r\nimport { updateSocket } from './chat';\r\n\r\nexport const fetchGendersFx = createEffect(async () => {\r\n  const res = await fetch('http://109.194.37.212:93/api/auth');\r\n  return res.json();\r\n});\r\nexport const $genders = createStore({ genders: [] }).on(\r\n  fetchGendersFx.done,\r\n  (\r\n    state,\r\n    payload: {\r\n      params: void;\r\n      result: { genders: [] };\r\n    },\r\n  ) => payload.result,\r\n);\r\n\r\nexport const loginFx = createEffect(\r\n  async (data: { login: string; password: string; captcha: string }) => {\r\n    const formdata = new FormData();\r\n    formdata.append('login', data.login);\r\n    formdata.append('password', data.password);\r\n    formdata.append('captcha', data.captcha);\r\n    const res = await fetch('http://109.194.37.212:93/api/auth/login', {\r\n      method: 'POST',\r\n      body: formdata,\r\n    });\r\n    if (!res.ok) {\r\n      await res.text().then((text) => {\r\n        throw Error(text);\r\n      });\r\n    }\r\n    return res.text();\r\n  },\r\n);\r\nloginFx.done.watch(({ result }) => {\r\n  localStorage.setItem('wsConnectKey', result.replace(/^\"(.*)\"$/, '$1'));\r\n  updateSocket();\r\n});\r\nloginFx.fail.watch(({ error }) => {\r\n  errorAlert(error.message);\r\n});\r\n\r\nexport const registrationFx = createEffect(\r\n  async (data: {\r\n    login: string;\r\n    password: string;\r\n    passwordConfirm: string;\r\n    name: string;\r\n    genderId: string;\r\n    captcha: string;\r\n  }) => {\r\n    const formdata = new FormData();\r\n    formdata.append('login', data.login);\r\n    formdata.append('password', data.password);\r\n    formdata.append('password_confirm', data.passwordConfirm);\r\n    formdata.append('name', data.name);\r\n    formdata.append('gender_id', data.genderId);\r\n    formdata.append('captcha', data.captcha);\r\n    const res = await fetch('http://109.194.37.212:93/api/auth/register', {\r\n      method: 'POST',\r\n      body: formdata,\r\n    });\r\n    if (!res.ok) {\r\n      await res.text().then((text) => {\r\n        throw Error(text);\r\n      });\r\n    }\r\n    return res.text();\r\n  },\r\n);\r\nregistrationFx.done.watch(({ result }) => {\r\n  successAlert(result);\r\n});\r\nregistrationFx.fail.watch(({ error }) => {\r\n  errorAlert(error.message);\r\n});\r\n\r\nexport const $isAuth = createStore(\r\n  !!(localStorage.getItem('wsConnectKey') || ''),\r\n).on(loginFx.done, () => true);\r\n","import { createEffect, createEvent, createStore } from 'effector';\r\nimport { MessageType, userType } from '../types/index';\r\nimport { $isAuth } from './auth';\r\nimport { errorAlert, successAlert } from '../utils/functions';\r\n\r\nexport const $messages = createStore<MessageType[]>(\r\n  JSON.parse(localStorage.getItem('messages') || '[]'),\r\n);\r\nexport const addMessage = createEvent<{\r\n  file?: MessageType['file'];\r\n  text?: string;\r\n  from: string;\r\n  to: string;\r\n}>();\r\nconst addMessageStore = (\r\n  state: MessageType[],\r\n  data: { file?: MessageType['file']; text?: string; from: string; to: string },\r\n) => {\r\n  state.push({\r\n    ...data,\r\n    id: Date.now(),\r\n  });\r\n  localStorage.setItem('messages', JSON.stringify(state));\r\n  return [...state];\r\n};\r\n$messages.on(addMessage, addMessageStore);\r\n\r\nexport const refreshUsersList = createEvent<userType[]>();\r\nexport const itIsMe = createEvent<string>();\r\nexport const $users = createStore<userType[]>([]).on(\r\n  refreshUsersList,\r\n  (state, payload) => {\r\n    const result = payload;\r\n    result[result.length - 1].you = true;\r\n    return payload;\r\n  },\r\n);\r\n\r\nexport const $usersIsLoading = createStore(true).on(\r\n  refreshUsersList,\r\n  () => false,\r\n);\r\n\r\nexport const sendFileFx = createEffect(\r\n  async (params: { file: File; func: (href: string) => void }) => {\r\n    const formdata = new FormData();\r\n    formdata.append('0', params.file);\r\n    const res = await fetch('http://109.194.37.212:93/api/upload', {\r\n      method: 'POST',\r\n      body: formdata,\r\n    });\r\n    if (!res.ok) {\r\n      await res.text().then((text) => {\r\n        throw Error(text);\r\n      });\r\n    }\r\n    return res.text();\r\n  },\r\n);\r\nsendFileFx.done.watch(({ params, result }) => {\r\n  params.func(`http://109.194.37.212:93${result}`);\r\n  successAlert('file is ready to send');\r\n});\r\nsendFileFx.fail.watch(({ error }) => {\r\n  errorAlert(error.message);\r\n});\r\n\r\nexport const updateSocket = createEvent();\r\nexport const $socket = createStore(\r\n  $isAuth &&\r\n    new WebSocket(\r\n      `ws://109.194.37.212:2346/?type=test&ws_id=${\r\n        localStorage.getItem('wsConnectKey') || ''\r\n      }`,\r\n    ),\r\n).on(\r\n  updateSocket,\r\n  () =>\r\n    new WebSocket(\r\n      `ws://109.194.37.212:2346/?type=test&ws_id=${\r\n        localStorage.getItem('wsConnectKey') || ''\r\n      }`,\r\n    ),\r\n);\r\n","enum SCREENS {\r\n  SCREEN_CHAT = '/chat/:id?',\r\n  SCREEN_LOGIN = '/login',\r\n  SCREEN_REGISTER = '/registration',\r\n}\r\n\r\nexport default SCREENS;\r\n","import classNames from 'classnames';\r\nimport React, { FC } from 'react';\r\nimport './Loader.scss';\r\n\r\ninterface LoaderProps {\r\n  className?: string;\r\n}\r\n\r\nconst Loader: FC<LoaderProps> = ({ className = '' }) => {\r\n  const classNameProps = classNames('sk-fading-circle', className);\r\n\r\n  return (\r\n    <div className={classNameProps}>\r\n      <div className=\"sk-circle1 sk-circle\" />\r\n      <div className=\"sk-circle2 sk-circle\" />\r\n      <div className=\"sk-circle3 sk-circle\" />\r\n      <div className=\"sk-circle4 sk-circle\" />\r\n      <div className=\"sk-circle5 sk-circle\" />\r\n      <div className=\"sk-circle6 sk-circle\" />\r\n      <div className=\"sk-circle7 sk-circle\" />\r\n      <div className=\"sk-circle8 sk-circle\" />\r\n      <div className=\"sk-circle9 sk-circle\" />\r\n      <div className=\"sk-circle10 sk-circle\" />\r\n      <div className=\"sk-circle11 sk-circle\" />\r\n      <div className=\"sk-circle12 sk-circle\" />\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Loader;\r\n","import classNames from 'classnames';\r\nimport React, { FC } from 'react';\r\nimport './Typography.scss';\r\n\r\ninterface TypographyProps {\r\n  variant: '1' | '2' | '3' | '4' | '5' | '6';\r\n  children: React.ReactNode;\r\n  className?: string;\r\n}\r\n\r\nconst Typography: FC<TypographyProps> = ({\r\n  className = '',\r\n  children,\r\n  variant,\r\n}) => {\r\n  switch (variant) {\r\n    case '1':\r\n      return <h1 className={classNames('title1', className)}>{children}</h1>;\r\n    case '2':\r\n      return <h2 className={classNames('title2', className)}>{children}</h2>;\r\n    case '3':\r\n      return <h3 className={classNames('title3', className)}>{children}</h3>;\r\n    case '4':\r\n      return <h4 className={classNames('title4', className)}>{children}</h4>;\r\n    case '5':\r\n      return <p className={classNames('text1', className)}>{children}</p>;\r\n    default:\r\n      return <p className={classNames('text2', className)}>{children}</p>;\r\n  }\r\n};\r\n\r\nexport default Typography;\r\n","import classNames from 'classnames';\r\nimport React, { FC } from 'react';\r\nimport './Avatar.scss';\r\n\r\ninterface AvatarProps {\r\n  className?: string;\r\n  src: string;\r\n}\r\n\r\nconst Avatar: FC<AvatarProps> = ({ className = '', ...rest }) => {\r\n  const classProps = classNames('avatar', className);\r\n\r\n  return <img className={classProps} alt=\"avatar\" {...rest} />;\r\n};\r\n\r\nexport default Avatar;\r\n","export default __webpack_public_path__ + \"static/media/arrow.d3fd6ea1.svg\";","import React, { FC } from 'react';\r\nimport classNames from 'classnames';\r\nimport './ArrowButton.scss';\r\nimport { Link } from 'react-router-dom';\r\nimport arrow from '../../../assets/images/arrow.svg';\r\n\r\ninterface ArrowButtonProps {\r\n  className?: string;\r\n}\r\n\r\nconst ArrowButton: FC<ArrowButtonProps> = ({ className = '' }) => {\r\n  const classProps = classNames('arrowButton', className);\r\n\r\n  return (\r\n    <Link className={classProps} to=\"/chat\">\r\n      <img src={arrow} alt=\"arrow\" />\r\n    </Link>\r\n  );\r\n};\r\n\r\nexport default ArrowButton;\r\n","export default __webpack_public_path__ + \"static/media/maleIcon.b2f2a417.svg\";","export default __webpack_public_path__ + \"static/media/femaleIcon.dba0f28f.svg\";","import React, { FC } from 'react';\r\nimport classNames from 'classnames';\r\nimport Typography from '../../atoms/Typography/Typography';\r\nimport './Activity.scss';\r\nimport Avatar from '../../atoms/Avatar/Avatar';\r\nimport ArrowButton from '../../atoms/ArrowButton/ArrowButton';\r\nimport maleAvatar from '../../../assets/images/maleIcon.svg';\r\nimport femaleAvatar from '../../../assets/images/femaleIcon.svg';\r\n\r\ninterface ActivityProps {\r\n  className?: string;\r\n  title: string;\r\n  subtitle: string;\r\n  gender: 'male' | 'female';\r\n}\r\n\r\nconst Activity: FC<ActivityProps> = ({\r\n  className = '',\r\n  title,\r\n  subtitle,\r\n  gender,\r\n}) => {\r\n  const classProps = classNames('activity', className);\r\n  return (\r\n    <div className={classProps}>\r\n      <ArrowButton />\r\n      <Avatar\r\n        className=\"activity__avatar\"\r\n        src={gender === 'male' ? maleAvatar : femaleAvatar}\r\n      />\r\n      <div>\r\n        <Typography className=\"activity__title\" variant=\"3\">\r\n          {title}\r\n        </Typography>\r\n        <Typography className=\"activity__subtitle\" variant=\"5\">\r\n          {subtitle}\r\n        </Typography>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Activity;\r\n","import React, { FC } from 'react';\r\nimport classNames from 'classnames';\r\nimport './NoCardSelected.scss';\r\nimport Typography from '../../atoms/Typography/Typography';\r\n\r\ninterface NoCardSelectedProps {\r\n  className?: string;\r\n}\r\n\r\nconst NoCardSelected: FC<NoCardSelectedProps> = ({ className = '' }) => {\r\n  const classProps = classNames('noCardSelected', className);\r\n\r\n  return (\r\n    <div className={classProps}>\r\n      <Typography className=\"noCardSelected__text\" variant=\"5\">\r\n        Select a chat to stary messaging\r\n      </Typography>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default NoCardSelected;\r\n","import classNames from 'classnames';\r\nimport React, { FC } from 'react';\r\nimport { Link, useParams } from 'react-router-dom';\r\nimport Avatar from '../../atoms/Avatar/Avatar';\r\nimport Typography from '../../atoms/Typography/Typography';\r\nimport './Card.scss';\r\nimport maleAvatar from '../../../assets/images/maleIcon.svg';\r\nimport femaleAvatar from '../../../assets/images/femaleIcon.svg';\r\n\r\ninterface CardProps {\r\n  className?: string;\r\n  id: number;\r\n  gender: 'male' | 'female';\r\n  title: string;\r\n  subtitle: string | undefined;\r\n  user: boolean;\r\n}\r\n\r\nconst Card: FC<CardProps> = ({\r\n  className = '',\r\n  id,\r\n  gender,\r\n  title,\r\n  subtitle,\r\n  user,\r\n}) => {\r\n  const params: { id: string } = useParams();\r\n  const classProps = classNames('card', className, {\r\n    active: Number(params.id) === id,\r\n  });\r\n\r\n  return (\r\n    <Link className={classProps} to={`/chat/${id}`}>\r\n      <Avatar\r\n        className=\"card__avatar\"\r\n        src={gender === 'male' ? maleAvatar : femaleAvatar}\r\n      />\r\n      <div>\r\n        <Typography className=\"card__title\" variant=\"4\">\r\n          {title}\r\n        </Typography>\r\n        <Typography className=\"card__text\" variant=\"6\">\r\n          {user && <span className=\"card__text prev\">You: </span>}\r\n          <span>{subtitle}</span>\r\n        </Typography>\r\n      </div>\r\n    </Link>\r\n  );\r\n};\r\n\r\nexport default Card;\r\n","export default __webpack_public_path__ + \"static/media/lackCardsIcon.2a176518.svg\";","import React, { FC } from 'react';\r\nimport classNames from 'classnames';\r\nimport icon from '../../../assets/images/lackCardsIcon.svg';\r\nimport './LackCardsIcon.scss';\r\n\r\ninterface LackCardsIconProps {\r\n  className?: string;\r\n}\r\n\r\nconst LackCardsIcon: FC<LackCardsIconProps> = ({ className = '' }) => {\r\n  const classProps = classNames('lackCardsIcon', className);\r\n\r\n  return <img className={classProps} src={icon} alt=\"lack cards\" />;\r\n};\r\n\r\nexport default LackCardsIcon;\r\n","import React, { FC } from 'react';\r\nimport classNames from 'classnames';\r\nimport './LackCards.scss';\r\nimport LackCardsIcon from '../../atoms/LackCardsIcon/LackCardsIcon';\r\nimport Typography from '../../atoms/Typography/Typography';\r\n\r\ninterface LackCardsProps {\r\n  className?: string;\r\n}\r\n\r\nconst LackCards: FC<LackCardsProps> = ({ className = '' }) => {\r\n  const classProps = classNames('lackCards', className);\r\n\r\n  return (\r\n    <div className={classProps}>\r\n      <LackCardsIcon />\r\n      <Typography className=\"lackCards__text\" variant=\"5\">\r\n        There is no other users yet\r\n      </Typography>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default LackCards;\r\n","import classNames from 'classnames';\r\nimport React, { FC } from 'react';\r\nimport { MessageType, userType } from '../../../types';\r\nimport Loader from '../../atoms/Loader/Loader';\r\nimport Card from '../../molecules/Card/Card';\r\nimport LackCards from '../../molecules/LackCards/LackCards';\r\nimport './CardList.scss';\r\n\r\ninterface CardListProps {\r\n  className?: string;\r\n  users: userType[];\r\n  messages: MessageType[];\r\n  isLoading: boolean;\r\n}\r\nconst CardList: FC<CardListProps> = ({\r\n  className = '',\r\n  users,\r\n  messages,\r\n  isLoading,\r\n}) => {\r\n  const classProps = classNames('cardList', className);\r\n  const content = users.filter((user) => !user.you)[0] ? (\r\n    users\r\n      .filter((user) => !user.you)\r\n      .map((user) => {\r\n        const message = messages.filter(\r\n          (m) =>\r\n            (m.from === user?.name &&\r\n              m.to === users.filter((u) => u.you)[0]?.name) ||\r\n            (m.from === users.filter((u) => u.you)[0]?.name &&\r\n              m.to === user?.name),\r\n        );\r\n        const currentMessage = message[message.length - 1];\r\n        return (\r\n          <React.Fragment key={user.id}>\r\n            <Card\r\n              gender={user.gender}\r\n              title={user.name}\r\n              subtitle={\r\n                currentMessage?.text\r\n                  ? currentMessage?.text\r\n                  : currentMessage?.file && 'file'\r\n              }\r\n              id={user.id}\r\n              user={\r\n                currentMessage &&\r\n                currentMessage?.from === users.filter((u) => u.you)[0]?.name\r\n              }\r\n            />\r\n          </React.Fragment>\r\n        );\r\n      })\r\n  ) : (\r\n    <LackCards />\r\n  );\r\n\r\n  return (\r\n    <div className={classProps}>\r\n      {isLoading ? <Loader className=\"cardList__loader\" /> : content}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default CardList;\r\n","export default __webpack_public_path__ + \"static/media/logo.515e9ce4.svg\";","import classNames from 'classnames';\r\nimport React, { FC } from 'react';\r\nimport logo from '../../../assets/images/logo.svg';\r\nimport './Logo.scss';\r\n\r\ninterface LogoProps {\r\n  className?: string;\r\n}\r\n\r\nconst Logo: FC<LogoProps> = ({ className = '' }) => {\r\n  const classProps = classNames('logo', className);\r\n\r\n  return <img className={classProps} src={logo} alt=\"logo\" />;\r\n};\r\n\r\nexport default Logo;\r\n","export default __webpack_public_path__ + \"static/media/profileIcon.58ae8dd4.svg\";","import React, { FC } from 'react';\r\nimport './ProfileIcon.scss';\r\nimport classNames from 'classnames';\r\nimport image from '../../../assets/images/profileIcon.svg';\r\n\r\ninterface ProfileIconProps {\r\n  className?: string;\r\n}\r\n\r\nconst ProfileIcon: FC<ProfileIconProps> = ({ className = '' }) => {\r\n  const classProps = classNames('profileIcon', className);\r\n\r\n  return (\r\n    <div className={classProps}>\r\n      <img src={image} alt=\"profile\" />\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default ProfileIcon;\r\n","import classNames from 'classnames';\r\nimport React, { FC } from 'react';\r\nimport Logo from '../../atoms/Logo/Logo';\r\nimport ProfileIcon from '../../atoms/ProfileIcon/ProfileIcon';\r\nimport './Header.scss';\r\n\r\ninterface HeaderProps {\r\n  className?: string;\r\n}\r\n\r\nconst Header: FC<HeaderProps> = ({ className = '' }) => {\r\n  const classProps = classNames('header', className);\r\n  return (\r\n    <header className={classProps}>\r\n      <Logo className=\"header__logo\" />\r\n      <ProfileIcon className=\"header__profileIcon\" />\r\n    </header>\r\n  );\r\n};\r\n\r\nexport default Header;\r\n","export default __webpack_public_path__ + \"static/media/fileIcon.aa0e056d.svg\";","import classNames from 'classnames';\r\nimport React, { FC } from 'react';\r\nimport { useStore } from 'effector-react';\r\nimport { MessageType } from '../../../types';\r\nimport Typography from '../../atoms/Typography/Typography';\r\nimport fileIcon from '../../../assets/images/fileIcon.svg';\r\nimport './Message.scss';\r\nimport { $users } from '../../../store/chat';\r\n\r\ninterface MessageProps {\r\n  className?: string;\r\n  message: MessageType;\r\n}\r\n\r\nconst Message: FC<MessageProps> = ({ className = '', message }) => {\r\n  const users = useStore($users);\r\n  const classProps = classNames('message', className, {\r\n    message__right:\r\n      message.from === users.filter((user) => user.you)[0]?.name,\r\n  });\r\n  return (\r\n    <div className={classProps}>\r\n      <div className=\"message__inner\">\r\n        {message.file && (\r\n          <a className=\"message__file\" href={message.file?.href}>\r\n            <img className=\"message__image\" src={fileIcon} alt=\"\" />\r\n            <div>\r\n              <Typography variant=\"4\">{message.file?.name}</Typography>\r\n              <Typography variant=\"6\">\r\n                {Number(message.file?.size) / 1000000}MB\r\n              </Typography>\r\n            </div>\r\n          </a>\r\n        )}\r\n        {message.text && (\r\n          <Typography className=\"message__text\" variant=\"5\">\r\n            {message.text}\r\n          </Typography>\r\n        )}\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Message;\r\n","import classNames from 'classnames';\r\nimport React, { FC, useEffect } from 'react';\r\nimport { MessageType } from '../../../types';\r\nimport Message from '../../molecules/Message/Message';\r\nimport './MessageList.scss';\r\n\r\ninterface MessageListProps {\r\n  className?: string;\r\n  messages: MessageType[];\r\n}\r\n\r\nconst MessageList: FC<MessageListProps> = ({ className = '', messages }) => {\r\n  const classProps = classNames('messageList', className);\r\n  useEffect(() => {\r\n    const messagess = document.getElementById('1');\r\n    const scroll = () => {\r\n      if (messagess !== null) {\r\n        messagess.scrollTop = messagess.scrollHeight;\r\n      }\r\n    };\r\n    scroll();\r\n  });\r\n\r\n  return (\r\n    <div className={classProps} id=\"1\">\r\n      <div className=\"messageList__inner\">\r\n        {messages.map((el) => (\r\n          <React.Fragment key={el.id}>\r\n            <Message message={el} />\r\n          </React.Fragment>\r\n        ))}\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default MessageList;\r\n","export default __webpack_public_path__ + \"static/media/sendIcon.246f991e.svg\";","import React, { FC } from 'react';\r\nimport './SendButton.scss';\r\nimport classNames from 'classnames';\r\nimport sendIcon from '../../../assets/images/sendIcon.svg';\r\n\r\ninterface SendButtonProps {\r\n  className?: string;\r\n}\r\n\r\nconst SendButton: FC<SendButtonProps> = ({ className = '' }) => {\r\n  const classProps = classNames('sendButton', className);\r\n\r\n  return (\r\n    <button className={classProps} type=\"submit\">\r\n      <img src={sendIcon} alt=\"send\" />\r\n    </button>\r\n  );\r\n};\r\n\r\nexport default SendButton;\r\n","import React, { FC } from 'react';\r\nimport './SendFile.scss';\r\nimport classNames from 'classnames';\r\nimport { errorAlert } from '../../../utils/functions';\r\n\r\ninterface SendFileProps {\r\n  className?: string;\r\n  onChange: (file: File) => void;\r\n}\r\n\r\nconst SendFile: FC<SendFileProps> = ({ className = '', onChange }) => {\r\n  const classProps = classNames('sendFile', className);\r\n\r\n  const handleFile = (file: React.ChangeEvent<HTMLInputElement>) => {\r\n    try {\r\n      // eslint-disable-next-line @typescript-eslint/no-non-null-assertion\r\n      const currentFile = file.target.files![0];\r\n      const ext = currentFile.type;\r\n      if (currentFile.size > 2097152) {\r\n        errorAlert('the file must be less than 2MB');\r\n      } else if (\r\n        ext === 'video/mp4' ||\r\n        ext === 'video/ogg' ||\r\n        ext === 'video/webm' ||\r\n        ext === 'audio/mpeg' ||\r\n        ext === 'audio/ogg' ||\r\n        ext === 'image/jpeg' ||\r\n        ext === 'image/gif' ||\r\n        ext === 'image/png' ||\r\n        ext === 'image/svg+xml'\r\n      ) {\r\n        onChange(currentFile);\r\n      } else {\r\n        errorAlert('valid file permissions: mp4/ogg/webm/mpeg/jpg/gif/png/svg');\r\n      }\r\n    } catch (error) {\r\n      errorAlert('could not read the file');\r\n    }\r\n  };\r\n  return (\r\n    <>\r\n      <label className={classProps} htmlFor=\"upload-file\">\r\n        <input id=\"upload-file\" type=\"file\" onChange={handleFile} />\r\n      </label>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default SendFile;\r\n","import classNames from 'classnames';\r\nimport React, { FC } from 'react';\r\nimport './SendInput.scss';\r\n\r\ninterface SendInputProps {\r\n  className?: string;\r\n  onChange: (text: string) => void;\r\n  value: string | undefined;\r\n}\r\n\r\nconst SendInput: FC<SendInputProps> = ({ className = '', onChange, value }) => {\r\n  const classProps = classNames('sendInput', className);\r\n\r\n  return (\r\n    <>\r\n      <input\r\n        className={classProps}\r\n        placeholder=\"Sending messages works too...\"\r\n        autoComplete=\"off\"\r\n        value={value}\r\n        onChange={(e) => onChange(e.target.value)}\r\n      />\r\n    </>\r\n  );\r\n};\r\n\r\nexport default SendInput;\r\n","import classNames from 'classnames';\r\nimport { useStore } from 'effector-react';\r\nimport React, { FC, useState } from 'react';\r\nimport { $socket, $users, sendFileFx } from '../../../store/chat';\r\nimport Loader from '../../atoms/Loader/Loader';\r\nimport SendButton from '../../atoms/SendButton/SendButton';\r\nimport SendFile from '../../atoms/SendFile/SendFile';\r\nimport SendInput from '../../atoms/SendInput/SendInput';\r\nimport './SendForm.scss';\r\nimport { MessageType, userType } from '../../../types';\r\n\r\ninterface SendFormProps {\r\n  className?: string;\r\n  currentUser: userType;\r\n}\r\n\r\nconst SendForm: FC<SendFormProps> = ({ className = '', currentUser }) => {\r\n  const classProps = classNames('sendForm', className);\r\n  const isLoading = useStore(sendFileFx.pending);\r\n  const socket = useStore($socket);\r\n  const users = useStore($users);\r\n  const [values, setvalues] = useState<{\r\n    file?: MessageType['file'];\r\n    text?: string;\r\n  }>({ text: '' });\r\n\r\n  const onSubmit = (e: React.FormEvent<HTMLFormElement>) => {\r\n    e.preventDefault();\r\n    if (values.text || values.file) {\r\n      socket.send(\r\n        `\"${JSON.stringify({\r\n          ...values,\r\n          from: users.filter((user) => user.you)[0].name,\r\n          to: currentUser.name,\r\n        })}\"`,\r\n      );\r\n      setvalues({ text: '' });\r\n    }\r\n  };\r\n\r\n  const handleFileChange = (f: File) => {\r\n    sendFileFx({\r\n      file: f,\r\n      func: (href: string) =>\r\n        setvalues((v) => ({\r\n          ...v,\r\n          file: { name: f.name, size: f.size, href },\r\n        })),\r\n    });\r\n  };\r\n\r\n  const handleInputChange = (t: string) => {\r\n    setvalues((v) => ({ ...v, text: t }));\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <form className={classProps} onSubmit={onSubmit}>\r\n        {isLoading ? (\r\n          <Loader className=\"sendForm__loader\" />\r\n        ) : (\r\n          <>\r\n            <SendFile onChange={handleFileChange} />\r\n            {values.file?.name}\r\n            <SendInput onChange={handleInputChange} value={values.text} />\r\n            <SendButton />\r\n          </>\r\n        )}\r\n      </form>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default SendForm;\r\n","import classNames from 'classnames';\r\nimport React, { FC } from 'react';\r\nimport { MessageType, userType } from '../../../types';\r\nimport Loader from '../../atoms/Loader/Loader';\r\nimport Activity from '../../molecules/Activity/Activity';\r\nimport NoCardSelected from '../../molecules/NoCardSelected/NoCardSelected';\r\nimport CardList from '../../organisms/CardList/CardList';\r\nimport Header from '../../organisms/Header/Header';\r\nimport MessageList from '../../organisms/MessageList/MessageList';\r\nimport SendForm from '../../organisms/SendForm/SendForm';\r\nimport './ChatTemplate.scss';\r\n\r\ninterface ChatTemplateProps {\r\n  currentUser: userType;\r\n  users: userType[];\r\n  messages: MessageType[];\r\n  isLoading: boolean;\r\n}\r\n\r\nconst ChatTemplate: FC<ChatTemplateProps> = ({\r\n  currentUser,\r\n  users,\r\n  messages,\r\n  isLoading,\r\n}) => {\r\n  const mobileClass = classNames('chat__inner', { show: currentUser });\r\n  const content =\r\n    users.filter((user) => !user.you)[0] && currentUser ? (\r\n      <>\r\n        <Activity\r\n          title={currentUser.name}\r\n          subtitle=\"online\"\r\n          gender={currentUser.gender}\r\n        />\r\n        <MessageList\r\n          messages={messages.filter(\r\n            (message) =>\r\n              (message.from === currentUser?.name &&\r\n                message.to === users.filter((user) => user.you)[0]?.name) ||\r\n              (message.from === users.filter((user) => user.you)[0]?.name &&\r\n                message.to === currentUser?.name),\r\n          )}\r\n        />\r\n        <SendForm currentUser={currentUser} />\r\n      </>\r\n    ) : (\r\n      users.filter((user) => !user.you)[0] && <NoCardSelected />\r\n    );\r\n\r\n  return (\r\n    <>\r\n      <Header className={currentUser && 'disable'} />\r\n      <main className=\"chat\">\r\n        <CardList\r\n          className={currentUser && 'disable'}\r\n          users={users}\r\n          isLoading={isLoading}\r\n          messages={messages}\r\n        />\r\n        <div className={mobileClass}>{isLoading ? <Loader /> : content}</div>\r\n      </main>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default ChatTemplate;\r\n","import { useStore } from 'effector-react';\r\nimport React, { FC, useEffect } from 'react';\r\nimport { useParams } from 'react-router-dom';\r\nimport {\r\n  $messages,\r\n  $socket,\r\n  $users,\r\n  $usersIsLoading,\r\n  addMessage,\r\n  refreshUsersList,\r\n} from '../../store/chat';\r\nimport { userType } from '../../types';\r\nimport { isJson } from '../../utils/functions';\r\nimport ChatTemplate from '../templates/Chat/ChatTemplate';\r\n\r\nconst Chat: FC = () => {\r\n  const socket = useStore($socket);\r\n  useEffect(() => {\r\n    socket.onopen = () => {\r\n      socket.send(JSON.stringify({ type: 'users_list' }));\r\n    };\r\n    socket.onmessage = (event: MessageEvent<string>) => {\r\n      console.log(event);\r\n      if (isJson(event.data) && JSON.parse(event.data).type === 'users_list') {\r\n        refreshUsersList(\r\n          JSON.parse(event.data).data.map((el: userType, index: number) => ({\r\n            ...el,\r\n            id: index + 1,\r\n          })),\r\n        );\r\n      } else {\r\n        addMessage(JSON.parse(event.data.replace(/^\"(.*)\"$/, '$1')));\r\n      }\r\n    };\r\n  }, []);\r\n  const params: { id: string } = useParams();\r\n  const usersIsLoading = useStore($usersIsLoading);\r\n  const users = useStore($users);\r\n  const currentUser = users.filter((el) => el.id === Number(params.id))[0];\r\n  const messages = useStore($messages);\r\n\r\n  return (\r\n    <ChatTemplate\r\n      messages={messages}\r\n      users={users}\r\n      currentUser={currentUser}\r\n      isLoading={usersIsLoading}\r\n    />\r\n  );\r\n};\r\n\r\nexport default Chat;\r\n","import classNames from 'classnames';\r\nimport React, { FC } from 'react';\r\nimport { FieldError } from 'react-hook-form';\r\nimport './AuthButton.scss';\r\n\r\ninterface AuthButtonProps {\r\n  className?: string;\r\n  children: React.ReactNode;\r\n  variant?: 'white';\r\n  onClick?: () => void;\r\n  error?: {\r\n    login?: FieldError | undefined;\r\n    password?: FieldError | undefined;\r\n    captcha?: FieldError | undefined;\r\n  };\r\n}\r\n\r\nconst AuthButton: FC<AuthButtonProps> = ({\r\n  className = '',\r\n  children,\r\n  variant,\r\n  error,\r\n  ...rest\r\n}) => {\r\n  const classProps = classNames('button', className, {\r\n    white: variant === 'white',\r\n  });\r\n\r\n  return (\r\n    <button\r\n      className={classProps}\r\n      disabled={!!error?.login || !!error?.password || !!error?.captcha}\r\n      type={variant === 'white' ? 'button' : 'submit'}\r\n      {...rest}\r\n    >\r\n      {children}\r\n    </button>\r\n  );\r\n};\r\n\r\nexport default AuthButton;\r\n","import classNames from 'classnames';\r\nimport React, { FC } from 'react';\r\nimport './Label.scss';\r\n\r\ninterface LabelProps {\r\n  className?: string;\r\n  children: React.ReactNode;\r\n  htmlFor: string;\r\n}\r\n\r\nconst Label: FC<LabelProps> = ({ className = '', children, htmlFor }) => {\r\n  const classProps = classNames('label', className);\r\n\r\n  return (\r\n    <label className={classProps} htmlFor={htmlFor}>\r\n      {children}\r\n    </label>\r\n  );\r\n};\r\n\r\nexport default Label;\r\n","import classNames from 'classnames';\r\nimport React, { FC } from 'react';\r\nimport './AuthInput.scss';\r\n\r\ninterface AuthInputProps {\r\n  className?: string;\r\n  id: string;\r\n  placeholder: string;\r\n  error: string | undefined;\r\n  isDirty: boolean;\r\n}\r\n\r\nconst AuthInput: FC<AuthInputProps> = ({\r\n  className = '',\r\n  error,\r\n  isDirty,\r\n  ...rest\r\n}) => {\r\n  const classProps = classNames('input', className, {\r\n    isDirty,\r\n    error: !!error,\r\n  });\r\n\r\n  return (\r\n    <>\r\n      <input className={classProps} autoComplete=\"off\" {...rest} />\r\n      {error && <p className=\"input__errorText\">{error}</p>}\r\n    </>\r\n  );\r\n};\r\n\r\nexport default AuthInput;\r\n","import React, { FC } from 'react';\r\nimport './Field.scss';\r\nimport { Noop } from 'react-hook-form';\r\nimport classNames from 'classnames';\r\nimport Label from '../../atoms/Label/Label';\r\nimport AuthInput from '../../atoms/AuthInput/AuthInput';\r\n\r\ninterface FieldProps {\r\n  className?: string;\r\n  type?: string;\r\n  label: string;\r\n  placeholder: string\r\n  error: string | undefined;\r\n  onChange: (...event: []) => void;\r\n  onBlur: Noop;\r\n  isDirty: boolean\r\n}\r\n\r\nconst Field: FC<FieldProps> = ({ className = '', label, error, ...rest }) => {\r\n  const classProps = classNames('field', className, { error: !!error });\r\n  return (\r\n    <div className={classProps}>\r\n      <Label className=\"field__label\" htmlFor={label}>\r\n        {label}\r\n      </Label>\r\n      <AuthInput\r\n        id={label}\r\n        error={error}\r\n        {...rest}\r\n      />\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Field;\r\n","import React, { FC, useState } from 'react';\r\nimport classNames from 'classnames';\r\nimport './AuthCaptcha.scss';\r\n\r\ninterface AuthCaptchaProps {\r\n  className?: string;\r\n}\r\n\r\nconst AuthCaptcha: FC<AuthCaptchaProps> = ({ className = '' }) => {\r\n  const classProps = classNames('authCaptcha', className);\r\n  const [captchaSrc, setCaptchaSrc] = useState(\r\n    'http://109.194.37.212:93/api/auth/captcha',\r\n  );\r\n  const refreshCaptcha = () => {\r\n    fetch(`http://109.194.37.212:93/api/auth/captcha?t=${Date.now()}`, {\r\n      headers: {\r\n        'Access-Control-Expose-Headers': 'Set-Cookie',\r\n        'Access-control-Allow-Origin': '*',\r\n        'Access-control-Allow-Credentials': 'true',\r\n      },\r\n    }).then((res) => setCaptchaSrc(res.url));\r\n  };\r\n\r\n  return (\r\n    <div className={classProps}>\r\n      <img src={captchaSrc} alt=\"\" />\r\n      <button\r\n        type=\"button\"\r\n        aria-label=\"refresh captcha\"\r\n        className=\"authCaptcha__refresh\"\r\n        onClick={refreshCaptcha}\r\n      />\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default AuthCaptcha;\r\n","import React, { FC } from 'react';\r\nimport { Controller, useForm } from 'react-hook-form';\r\nimport * as yup from 'yup';\r\nimport { yupResolver } from '@hookform/resolvers/yup';\r\nimport classNames from 'classnames';\r\nimport { useHistory } from 'react-router-dom';\r\nimport AuthButton from '../../atoms/AuthButton/AuthButton';\r\nimport Field from '../../molecules/Field/Field';\r\nimport './LoginForm.scss';\r\nimport { loginFx } from '../../../store/auth';\r\nimport AuthCaptcha from '../../molecules/AuthCaptcha/AuthCaptcha';\r\n\r\ninterface LoginFormProps {\r\n  className?: string;\r\n}\r\n\r\nconst schema = yup.object().shape({\r\n  login: yup.string().min(5).max(50).required(),\r\n  password: yup.string().min(8).max(32).required(),\r\n  captcha: yup.string().length(5).required(),\r\n});\r\n\r\nconst LoginForm: FC<LoginFormProps> = ({ className = '' }) => {\r\n  const classProps = classNames('loginForm', className);\r\n  const {\r\n    handleSubmit,\r\n    formState: { errors },\r\n    control,\r\n  } = useForm({\r\n    resolver: yupResolver(schema),\r\n    defaultValues: {\r\n      login: '',\r\n      password: '',\r\n      captcha: '',\r\n    },\r\n  });\r\n  const history = useHistory();\r\n  const onSubmitTest = (data: {\r\n    login: string;\r\n    password: string;\r\n    captcha: string;\r\n  }) => {\r\n    loginFx(data);\r\n  };\r\n  return (\r\n    <form className={classProps} onSubmit={handleSubmit(onSubmitTest)}>\r\n      <Controller\r\n        control={control}\r\n        name=\"login\"\r\n        render={({\r\n          field: { onChange, onBlur },\r\n          fieldState: { error, isDirty },\r\n        }) => (\r\n          <Field\r\n            className=\"loginForm__field\"\r\n            label=\"User name\"\r\n            placeholder=\"Input user name\"\r\n            error={error?.message}\r\n            onChange={onChange}\r\n            onBlur={onBlur}\r\n            isDirty={isDirty}\r\n          />\r\n        )}\r\n      />\r\n      <Controller\r\n        control={control}\r\n        name=\"password\"\r\n        render={({\r\n          field: { onChange, onBlur },\r\n          fieldState: { error, isDirty },\r\n        }) => (\r\n          <Field\r\n            className=\"loginForm__field\"\r\n            label=\"Password\"\r\n            placeholder=\"Input password\"\r\n            error={error?.message}\r\n            type=\"password\"\r\n            onChange={onChange}\r\n            onBlur={onBlur}\r\n            isDirty={isDirty}\r\n          />\r\n        )}\r\n      />\r\n      <div className=\"loginForm__captcha\">\r\n        <Controller\r\n          control={control}\r\n          name=\"captcha\"\r\n          render={({\r\n            field: { onChange, onBlur },\r\n            fieldState: { error, isDirty },\r\n          }) => (\r\n            <Field\r\n              className=\"loginForm__field\"\r\n              label=\"Security code\"\r\n              placeholder=\"Security code\"\r\n              error={error?.message}\r\n              onChange={onChange}\r\n              onBlur={onBlur}\r\n              isDirty={isDirty}\r\n            />\r\n          )}\r\n        />\r\n        <AuthCaptcha />\r\n      </div>\r\n      <div className=\"loginForm__buttons\">\r\n        <AuthButton error={errors} className=\"loginForm__button\">\r\n          Log In\r\n        </AuthButton>\r\n        <AuthButton\r\n          className=\"loginForm__button\"\r\n          variant=\"white\"\r\n          onClick={() => history.push('/registration')}\r\n        >\r\n          Registration\r\n        </AuthButton>\r\n      </div>\r\n    </form>\r\n  );\r\n};\r\n\r\nexport default LoginForm;\r\n","import React from 'react';\r\nimport LoginForm from '../../organisms/LoginForm/LoginForm';\r\nimport './LoginTemplate.scss';\r\nimport Logo from '../../atoms/Logo/Logo';\r\nimport Typography from '../../atoms/Typography/Typography';\r\n\r\nconst LoginTemplate: React.FC = () => (\r\n  <main className=\"login\">\r\n    <div className=\"login__inner\">\r\n      <Logo className=\"login__logo\" />\r\n      <Typography variant=\"1\">\r\n        <span>Wellcome to </span>\r\n        <span className=\"login__titleBlue\">Chatty</span>\r\n        <span className=\"login__titleLightBlue\">!</span>\r\n      </Typography>\r\n      <Typography className=\"login__subtitle\" variant=\"2\">\r\n        Please, autorize yourself\r\n      </Typography>\r\n      <LoginForm />\r\n    </div>\r\n    <span className=\"login__span\" />\r\n  </main>\r\n);\r\n\r\nexport default LoginTemplate;\r\n","import React, { FC } from 'react';\r\nimport LoginTemplate from '../templates/Login/LoginTemplate';\r\n\r\nconst Login: FC = () => <LoginTemplate />;\r\n\r\nexport default Login;\r\n","import React, { FC, useRef, useState } from 'react';\r\nimport classNames from 'classnames';\r\nimport './Select.scss';\r\nimport { Noop } from 'react-hook-form';\r\n\r\ninterface SelectProps {\r\n  className?: string;\r\n  id: string;\r\n  error: string | undefined;\r\n  onChange: (...event: []) => void;\r\n  onBlur: Noop;\r\n  options: { id: string; gender: string }[];\r\n}\r\n\r\nconst Select: FC<SelectProps> = ({\r\n  className = '',\r\n  error,\r\n  onChange,\r\n  options,\r\n  ...rest\r\n}) => {\r\n  const inputRef = useRef<HTMLInputElement>(null);\r\n  const [isOpen, setIsOpen] = useState<boolean>(false);\r\n  const [value, setValue] = useState({\r\n    id: '',\r\n    gender: '',\r\n  });\r\n\r\n  const classProps = classNames('select', className);\r\n  const buttonClass = classNames('select__button', {\r\n    open: isOpen,\r\n    selected: value.id.length > 0,\r\n    error: !!error,\r\n  });\r\n  const selectClass = classNames('select__inner', { open: isOpen });\r\n\r\n  const handleButtonClick = async (el: { id: string; gender: string }) => {\r\n    await setValue(() => el);\r\n    await setIsOpen(() => false);\r\n    inputRef?.current?.dispatchEvent(new Event('input', { bubbles: true }));\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <div className={classProps}>\r\n        <button\r\n          className={buttonClass}\r\n          type=\"button\"\r\n          onClick={() => setIsOpen((el) => !el)}\r\n        >\r\n          {value.id.length > 0 ? value.gender : 'Your gender'}\r\n          <input\r\n            type=\"hidden\"\r\n            value={value.id}\r\n            onInput={onChange}\r\n            ref={inputRef}\r\n            {...rest}\r\n          />\r\n        </button>\r\n        {isOpen && (\r\n          <div className={selectClass}>\r\n            {options.map((el) => (\r\n              <button\r\n                key={el.id}\r\n                className=\"select__inner__button\"\r\n                type=\"button\"\r\n                onClick={() => handleButtonClick(el)}\r\n              >\r\n                {el.gender}\r\n              </button>\r\n            ))}\r\n          </div>\r\n        )}\r\n      </div>\r\n      {error && <p className=\"select__errorText\">{error}</p>}\r\n    </>\r\n  );\r\n};\r\n\r\nexport default Select;\r\n","import React, { FC } from 'react';\r\nimport './AuthSelect.scss';\r\nimport { Noop } from 'react-hook-form';\r\nimport classNames from 'classnames';\r\nimport Label from '../../atoms/Label/Label';\r\nimport Select from '../../atoms/Select/Select';\r\n\r\ninterface AuthSelectProps {\r\n  className?: string;\r\n  label: string;\r\n  error: string | undefined;\r\n  onChange: (...event: []) => void;\r\n  onBlur: Noop;\r\n  options: { id: string; gender: string }[];\r\n}\r\n\r\nconst AuthSelect: FC<AuthSelectProps> = ({\r\n  className = '',\r\n  label,\r\n  error,\r\n  options,\r\n  ...rest\r\n}) => {\r\n  const classProps = classNames('authSelect', className, { error: !!error });\r\n\r\n  return (\r\n    <div className={classProps}>\r\n      <Label className=\"authSelect__label\" htmlFor={label}>\r\n        {label}\r\n      </Label>\r\n      <Select options={options} id={label} error={error} {...rest} />\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default AuthSelect;\r\n","import React, { FC, useEffect } from 'react';\r\nimport { Controller, useForm } from 'react-hook-form';\r\nimport * as yup from 'yup';\r\nimport { yupResolver } from '@hookform/resolvers/yup';\r\nimport classNames from 'classnames';\r\nimport { useHistory } from 'react-router-dom';\r\nimport { useStore } from 'effector-react';\r\nimport AuthButton from '../../atoms/AuthButton/AuthButton';\r\nimport Field from '../../molecules/Field/Field';\r\nimport './RegistrationForm.scss';\r\nimport { $genders, fetchGendersFx, registrationFx } from '../../../store/auth';\r\nimport AuthCaptcha from '../../molecules/AuthCaptcha/AuthCaptcha';\r\nimport AuthSelect from '../../molecules/AuthSelect/AuthSelect';\r\n\r\ninterface RegistrationFormProps {\r\n  className?: string;\r\n}\r\n\r\nconst schema = yup.object().shape({\r\n  login: yup.string().min(5).max(50),\r\n  password: yup.string().min(8).max(32),\r\n  passwordConfirm: yup\r\n    .string()\r\n    .oneOf([yup.ref('password'), null], 'Passwords must match'),\r\n  name: yup.string().max(50).required('This is a required field'),\r\n  genderId: yup.string().required('This is a required field'),\r\n  captcha: yup.string().length(5),\r\n});\r\n\r\nconst RegistrationForm: FC<RegistrationFormProps> = ({ className = '' }) => {\r\n  const classProps = classNames('registrationForm', className);\r\n  const genders = useStore($genders);\r\n  const {\r\n    handleSubmit,\r\n    formState: { errors },\r\n    control,\r\n  } = useForm({\r\n    resolver: yupResolver(schema),\r\n    defaultValues: {\r\n      login: '',\r\n      password: '',\r\n      passwordConfirm: '',\r\n      name: '',\r\n      genderId: '',\r\n      captcha: '',\r\n    },\r\n  });\r\n  const history = useHistory();\r\n  useEffect(() => {\r\n    fetchGendersFx();\r\n  }, []);\r\n\r\n  const onSubmitTest = (data: {\r\n    login: string;\r\n    password: string;\r\n    passwordConfirm: string;\r\n    name: string;\r\n    genderId: string;\r\n    captcha: string;\r\n  }) => {\r\n    registrationFx(data);\r\n  };\r\n\r\n  return (\r\n    <form className={classProps} onSubmit={handleSubmit(onSubmitTest)}>\r\n      <Controller\r\n        control={control}\r\n        name=\"login\"\r\n        render={({\r\n          field: { onChange, onBlur },\r\n          fieldState: { error, isDirty },\r\n        }) => (\r\n          <Field\r\n            className=\"registrationForm__field\"\r\n            label=\"Create user name\"\r\n            placeholder=\"Input user name\"\r\n            error={error?.message}\r\n            onChange={onChange}\r\n            onBlur={onBlur}\r\n            isDirty={isDirty}\r\n          />\r\n        )}\r\n      />\r\n      <Controller\r\n        control={control}\r\n        name=\"password\"\r\n        render={({\r\n          field: { onChange, onBlur },\r\n          fieldState: { error, isDirty },\r\n        }) => (\r\n          <Field\r\n            className=\"registrationForm__field\"\r\n            label=\"Create password\"\r\n            placeholder=\"Create password\"\r\n            type=\"password\"\r\n            error={error?.message}\r\n            onChange={onChange}\r\n            onBlur={onBlur}\r\n            isDirty={isDirty}\r\n          />\r\n        )}\r\n      />\r\n      <Controller\r\n        control={control}\r\n        name=\"passwordConfirm\"\r\n        render={({\r\n          field: { onChange, onBlur },\r\n          fieldState: { error, isDirty },\r\n        }) => (\r\n          <Field\r\n            className=\"registrationForm__field\"\r\n            label=\"Password confirmation\"\r\n            placeholder=\"Password confirmation\"\r\n            type=\"password\"\r\n            error={error?.message}\r\n            onChange={onChange}\r\n            onBlur={onBlur}\r\n            isDirty={isDirty}\r\n          />\r\n        )}\r\n      />\r\n      <Controller\r\n        control={control}\r\n        name=\"name\"\r\n        render={({\r\n          field: { onChange, onBlur },\r\n          fieldState: { error, isDirty },\r\n        }) => (\r\n          <Field\r\n            className=\"registrationForm__field\"\r\n            label=\"Nickname\"\r\n            placeholder=\"Nickname\"\r\n            error={error?.message}\r\n            onChange={onChange}\r\n            onBlur={onBlur}\r\n            isDirty={isDirty}\r\n          />\r\n        )}\r\n      />\r\n      <Controller\r\n        control={control}\r\n        name=\"genderId\"\r\n        render={({ field: { onChange, onBlur }, fieldState: { error } }) => (\r\n          <AuthSelect\r\n            className=\"registrationForm__field\"\r\n            label=\"Your gender\"\r\n            error={error?.message}\r\n            onChange={onChange}\r\n            onBlur={onBlur}\r\n            options={genders.genders}\r\n          />\r\n        )}\r\n      />\r\n      <div className=\"registrationForm__captcha\">\r\n        <Controller\r\n          control={control}\r\n          name=\"captcha\"\r\n          render={({\r\n            field: { onChange, onBlur },\r\n            fieldState: { error, isDirty },\r\n          }) => (\r\n            <Field\r\n              className=\"registrationForm__field\"\r\n              label=\"Security code\"\r\n              placeholder=\"Security code\"\r\n              error={error?.message}\r\n              onChange={onChange}\r\n              onBlur={onBlur}\r\n              isDirty={isDirty}\r\n            />\r\n          )}\r\n        />\r\n        <AuthCaptcha />\r\n      </div>\r\n      <div className=\"registrationForm__buttons\">\r\n        <AuthButton error={errors} className=\"registrationForm__button\">\r\n          Registration\r\n        </AuthButton>\r\n        <AuthButton\r\n          className=\"registrationForm__button\"\r\n          variant=\"white\"\r\n          onClick={() => history.push('/login')}\r\n        >\r\n          Log In\r\n        </AuthButton>\r\n      </div>\r\n    </form>\r\n  );\r\n};\r\n\r\nexport default RegistrationForm;\r\n","import React from 'react';\r\nimport './RegistrationTemplate.scss';\r\nimport Logo from '../../atoms/Logo/Logo';\r\nimport Typography from '../../atoms/Typography/Typography';\r\nimport RegistrationForm from '../../organisms/RegistrationForm/RegistrationForm';\r\n\r\nconst RegistrationTemplate: React.FC = () => (\r\n  <main className=\"registration\">\r\n    <div className=\"registration__inner\">\r\n      <Logo className=\"registration__logo\" />\r\n      <Typography variant=\"1\">\r\n        <span>Sign Up to </span>\r\n        <span className=\"registration__titleBlue\">Chatty</span>\r\n        <span className=\"registration__titleLightBlue\">!</span>\r\n      </Typography>\r\n      <Typography className=\"registration__subtitle\" variant=\"2\">\r\n        Registration\r\n      </Typography>\r\n      <RegistrationForm />\r\n    </div>\r\n    <span className=\"registration__span\" />\r\n  </main>\r\n);\r\n\r\nexport default RegistrationTemplate;\r\n","import React, { FC } from 'react';\r\nimport RegistrationTemplate from '../templates/Registration/RegistrationTemplate';\r\n\r\nconst Registration: FC = () => <RegistrationTemplate />;\r\n\r\nexport default Registration;\r\n","import { useStore } from 'effector-react';\r\nimport React, { FC } from 'react';\r\nimport { Switch, Route, Redirect } from 'react-router-dom';\r\nimport Chat from '../components/pages/Chat';\r\nimport Login from '../components/pages/Login';\r\nimport Registration from '../components/pages/Registration';\r\nimport { $isAuth } from '../store/auth';\r\nimport SCREENS from './endpoints';\r\n\r\nconst Routes: FC = () => {\r\n  const isAuth = useStore($isAuth);\r\n  if (isAuth) {\r\n    return (\r\n      <Switch>\r\n        <Route path={SCREENS.SCREEN_CHAT} component={Chat} exact />\r\n        <Redirect to={SCREENS.SCREEN_CHAT} />\r\n      </Switch>\r\n    );\r\n  }\r\n  return (\r\n    <Switch>\r\n      <Route path={SCREENS.SCREEN_LOGIN} component={Login} exact />\r\n      <Route path={SCREENS.SCREEN_REGISTER} component={Registration} exact />\r\n      <Redirect to={SCREENS.SCREEN_LOGIN} />\r\n    </Switch>\r\n  );\r\n};\r\n\r\nexport default Routes;\r\n","import React from 'react';\r\nimport { BrowserRouter as Router } from 'react-router-dom';\r\nimport { ToastContainer } from 'react-toastify';\r\nimport './assets/styles/index.scss';\r\nimport Routes from './routes/index';\r\nimport 'react-toastify/dist/ReactToastify.min.css';\r\n\r\nconst App: React.FC = () => (\r\n  <Router basename={process.env.PUBLIC_URL}>\r\n    <Routes />\r\n    <ToastContainer />\r\n  </Router>\r\n);\r\nexport default App;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport App from './App';\r\n\r\nReactDOM.render(<App />, document.getElementById('root'));\r\n"],"sourceRoot":""}